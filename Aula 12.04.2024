================================================Exemplo 1:
package Aula;
import java.util.Queue;
import java.util.LinkedList;
// Estrutura de Dados
//   -Fisicas: Variaveis
//   -Abstratas: pilha(stack), lista(list), fila(queue)
//      pilha: push/add/append e pop remove -> topo
//      lista: add/append, remove, contains, sort -> ordenação e controle de duplicidade
//		fila:  add/append(final) e remove (inicio) 
// Fila - Fifo - first In, first Out

public class Exemplo {
	public static void main (String [] src) {
		Queue<Integer> filaNumeros = new LinkedList<Integer>();
		
		filaNumeros.add(50);
		filaNumeros.add(5);
		filaNumeros.add(15);
		
		System.out.println("Exibindo fila: ");
		System.out.println(filaNumeros);
		
		System.out.println("Exibindo inicio ou cabeça/head da fila: ");
		System.out.println(filaNumeros.peek());
		
		System.out.println("Exibindo se fila esta ou nao vazia: ");
		System.out.println(filaNumeros.isEmpty());
		
		System.out.println("Exibindo o tamanho: ");
		System.out.println(filaNumeros.size());
		
		System.out.println("Verificando se 5 esta ou nao na fila: ");
		System.out.println(filaNumeros.contains(5));
	}
}

================================================Exemplo 2:
package Aula;
import java.util.Queue;
import java.time.Duration;
import java.util.LinkedList;

// Estrutura de Dados
//   -Fisicas: Variaveis
//   -Abstratas: pilha(stack), lista(list), fila(queue)
//      pilha: push/add/append e pop remove -> topo
//      lista: add/append, remove, contains, sort -> ordenação e controle de duplicidade
//		fila:  add/append(final) e remove (inicio) 
// Fila - Fifo - first In, first Out

public class Exemplo2 {
	public static void main (String [] src) {
		Queue<String> filaNumeros = new LinkedList<String>();
		
		filaNumeros.add("Saccol");
		filaNumeros.add("Pinheiro");
		filaNumeros.add("Iago");
		
		System.out.println("Exibindo fila: ");
		System.out.println(filaNumeros);
		
		System.out.println("Exibindo inicio ou cabeça/head da fila: ");
		System.out.println(filaNumeros.peek());
		
		System.out.println("Exibindo se fila esta ou nao vazia: ");
		System.out.println(filaNumeros.isEmpty());
		
		System.out.println("Exibindo o tamanho: ");
		System.out.println(filaNumeros.size());
		
		System.out.println("Verificando se IAGO esta ou nao na fila: ");
		System.out.println(filaNumeros.contains("IAGO"));
		
		while (!filaNumeros.isEmpty()) {
			System.out.println ("Removendo... "+filaNumeros.poll()); //.remove apos apagar termina o codigo, o poll apaga e segue sem erros
		}		
	}
}

================================================Exemplo 3:
----Programa 1:
package Aula;
import java.util.Queue;
import java.util.Scanner;
import java.time.Duration;
import java.util.LinkedList;

// Estrutura de Dados
//   -Fisicas: Variaveis
//   -Abstratas: pilha(stack), lista(list), fila(queue)
//      pilha: push/add/append e pop remove -> topo
//      lista: add/append, remove, contains, sort -> ordenação e controle de duplicidade
//		fila:  add/append(final) e remove (inicio) 
// Fila - Fifo - first In, first Out



public class Exemplo3 {
	public static void main (String [] src) {
		Scanner scanner = new Scanner (System.in);
		Queue<Aluno> filaAlunos = new LinkedList<Aluno>();
		int matricula;
		String nome;
		
		filaAlunos.add(new Aluno (1,"Saccol"));
		filaAlunos.add(new Aluno (2, "Pinheiro"));
		filaAlunos.add(new Aluno (3,"Iago"));
		
		for (int i = 0 ; i < 2 ; i++) {
			System.out.println ("Matricula: ");
			matricula = scanner.nextInt();
			scanner.nextLine();
			
			System.out.println ("Nome: ");
			nome = scanner.nextLine();
			filaAlunos.add (new Aluno(matricula, nome));
		}
		
		
		System.out.println("Exibindo fila: ");
		System.out.println(filaAlunos);
		
		System.out.println("Exibindo inicio ou cabeca/head da fila: ");
		System.out.println(filaAlunos.peek());
		
		System.out.println("Exibindo se fila esta ou nao vazia: ");
		System.out.println(filaAlunos.isEmpty());
		
		System.out.println("Exibindo o tamanho: ");
		System.out.println(filaAlunos.size());
		
		System.out.println("Verificando se IAGO esta ou nao na fila: ");
		Aluno a = new Aluno (3,"Iago");
		System.out.println(filaAlunos.contains(a));
		
		while (!filaAlunos.isEmpty()) {
			System.out.println ("Removendo... "+filaAlunos.poll()); //.remove apos apagar termina o codigo, o poll apaga e segue sem erros
	}
  }
}
----Programa 2:
package Aula;

import java.util.Objects;

public class Aluno {
	public int matricula;
	public String nome;
	public Aluno(int matricula, String nome) {
		this.matricula = matricula;
		this.nome = nome;
	}
	
	@Override
	public String toString() {
		return "Aluno [matricula=" + matricula + ", nome=" + nome + "]";
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Aluno other = (Aluno) obj;
		return matricula == other.matricula && Objects.equals(nome, other.nome);
	}
	
	 
}
================================================Exemplo 4:
